#! /usr/bin/bash

CLUSTER_NAME="cruddur"

# Deregister frontend first
SERVICE_NAME="frontend-react-js"
TASK_DEFINTION_FAMILY="frontend-react-js"

LATEST_TASK_DEFINITION_ARN=$(aws ecs describe-task-definition \
--task-definition $TASK_DEFINTION_FAMILY \
--query 'taskDefinition.taskDefinitionArn' \
--output text)

echo "TASK DEF ARN:"
echo $LATEST_TASK_DEFINITION_ARN

# Deregister task first
aws ecs deregister-task-definition --task-definition $LATEST_TASK_DEFINITION_ARN

# Deregister backend next
SERVICE_NAME="backend-flask"
TASK_DEFINTION_FAMILY="backend-flask"

LATEST_TASK_DEFINITION_ARN=$(aws ecs describe-task-definition \
--task-definition $TASK_DEFINTION_FAMILY \
--query 'taskDefinition.taskDefinitionArn' \
--output text)

echo "TASK DEF ARN:"
echo $LATEST_TASK_DEFINITION_ARN

# Deregister task
aws ecs deregister-task-definition --task-definition $LATEST_TASK_DEFINITION_ARN

# Scale down all services in the cluster now that tasks have been deregistered
for service in $(aws ecs list-services --cluster $CLUSTER_NAME --output text | awk '{print $2}'); do aws ecs update-service --cluster $CLUSTER_NAME --service $service --desired-count 0; done

# List all services in the cluster
aws ecs list-services --cluster $CLUSTER_NAME --output text

# Describe the services
for service in $(aws ecs list-services --cluster $CLUSTER_NAME --output text | awk '{print $2}'); do aws ecs describe-services --cluster $CLUSTER_NAME --service $service; done

# Delete services
for service in $(aws ecs list-services --cluster $CLUSTER_NAME --output text | awk '{print $2}'); do aws ecs delete-service --cluster $CLUSTER_NAME --service $service; done

# Delete cluster
aws ecs delete-cluster --cluster $CLUSTER_NAME
